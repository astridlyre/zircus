@mixin res($breakpoint) {
  @if $breakpoint == sm {
    @media only screen and (min-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == md {
    @media only screen and (min-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == lg {
    @media only screen and (min-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == xl {
    @media only screen and (min-width: 120.25em) {
      @content;
    }
  }
}

@mixin fadeIn($time) {
  animation: $time ease-in 0s forwards fadeIn;
}

@mixin easeOut {
  transition: all 0.1s ease-out;
}

@mixin grid1 {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto;
  gap: var(--grid-gap);
}

@mixin grid2 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  gap: var(--grid-gap);
}

@mixin flexRow {
  display: flex;
  flex-flow: row nowrap;
}

@mixin flexCol {
  display: flex;
  flex-flow: column nowrap;
}

@mixin flexCenter {
  justify-content: center;
  align-items: center;
}

@mixin insetAbs {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

@mixin borderHoverBig {
  @include insetAbs();
  border: 0.2rem solid var(--teal);
  border-radius: var(--big-radius);
  content: "";
  animation: 0.1s ease-out forwards borderGrowBig;
}
@mixin borderHover {
  @include insetAbs();
  border: 2px solid var(--teal);
  border-radius: var(--radius);
  content: "";
  animation: 0.1s ease-out forwards borderGrow;
}

@mixin moveDown {
  animation: 0.2s ease-out forwards moveDown;
}
